{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/PCR","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"PCR\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Rea\\xE7\\xE3o em cadeia de polimerase\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Aumenta o n\\xFAmero de c\\xF3pias de uma mol\\xE9cula de DNA em laborat\\xF3rio\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A amplifica\\xE7\\xE3o \\xE9 conhecida, apenas um peda\\xE7o do DNA de interesse \\xE9 copiado\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Use-se uma enzima polimerase isolada de uma bact\\xE9ria. A enzima se chama Taq polimerase\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Se usa primer espec\\xEDficos para copiar um gene\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Por exemplo uma bact\\xE9ria que tem especificamente um gene\")))), mdx(\"h1\", {\n    \"id\": \"componentes\"\n  }, \"Componentes\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"DNA molde \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Enzima Taq polimerase \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Tamp\\xE3o de rea\\xE7\\xE3o \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nucleot\\xEDdeos livres (dNTP = dATP, dCTP, dGTP e dTTP) \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cloreto de magn\\xE9sio (cofator da enzima) \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\xC0s vezes, est\\xE1 junto no tamp\\xE3o\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Primers espec\\xEDficos para a regi\\xE3o a ser amplificada \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\xC1gua est\\xE9ril \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Equipamento termociclador\")), mdx(\"h1\", {\n    \"id\": \"tipos-de-pcr\"\n  }, \"Tipos de PCR\"), mdx(\"h2\", {\n    \"id\": \"pcr-convencional\"\n  }, \"PCR convencional\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Faz toda rea\\xE7\\xE3o e, ap\\xF3s, precisa usar \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Eletroforese-em-gel\",\n    \"title\": \"Eletroforese em gel\"\n  }, \"[[Eletroforese em gel]]\"), \" para ver se realmente copiou o gene de interesse\")), mdx(\"h2\", {\n    \"id\": \"pcr-em-tempo-real\"\n  }, \"PCR em tempo real\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"a utiliza\\xE7\\xE3o de fluor\\xF3foros (corantes fluorescentes) permite que uma c\\xE2mera vai coletando dados ao longo do PCR e quando este finaliza j\\xE1 \\xE9 poss\\xEDvel a visualiza\\xE7\\xE3o do resultado (em um software), n\\xE3o sendo necess\\xE1ria a eletroforese\")), mdx(\"h3\", {\n    \"id\": \"pcr-em-tempo-real-qualitativo\"\n  }, \"PCR em tempo real qualitativo\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Discrimina\\xE7\\xE3o al\\xE9lica (nome comercial \\xE9 o sistema TaqMan). Dispositivo que procura por um gene e fala se existe ou n\\xE3o\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Usa sonda de hibridiza\\xE7\\xE3o alelo-espec\\xEDficas marcadas com fluoresc\\xEAncia\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A sonda \\xE9 l\\xEDquida a uma mol\\xE9cula flourescente (cada uma tem um tipo)\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A sonda \\xE9 um peda\\xE7o de DNA fita simples que vai ser complementar com um dos nucleot\\xEDdeos marcados\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Quando a sonda for complementar, ela vai fazer pareamento\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210508154003.png\",\n    \"alt\": \"Pasted image 20210508154003.png\"\n  }), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A que tem branco n\\xE3o se pareia com preto e o contr\\xE1rio tamb\\xE9m \\xE9 verdadeiro\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210508154335.png\",\n    \"alt\": \"Pasted image 20210508154335.png\"\n  }), \"\\n2. Ocorre desnatura\\xE7\\xE3o e anelamento do primer e da sonda.\\n3. DNA polimerase come\\xE7a a extender o primer at\\xE9 encontrar a sonda (degradando-a) e liberar a mol\\xE9cula fluorescente (que vai ser identificada pelo aparelho)\")))), mdx(\"h1\", {\n    \"id\": \"etapas\"\n  }, \"Etapas\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"Pasted%20image%2020210430165310.png\",\n    \"alt\": \"Pasted image 20210430165310.png\"\n  })), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Separa\\xE7\\xE3o das fitas (desnatura\\xE7\\xE3o). \\xC9 elevada a temperatura at\\xE9 94 \\xB0C (por isso \\xE9 importante que a enzima seja resistente a temperatura)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Anelamento. Etapa na qual o primer se liga na regi\\xE3o onde \\xE9 complementar (em ambas as dire\\xE7\\xF5es). Tem uma temperatura \\xF3tima para ocorrer.\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Taq polimerase se liga na parte 3' do primer e extende-lo usando os nucleot\\xEDdeos livres\")), mdx(\"h1\", {\n    \"id\": \"crescimento-exponencial\"\n  }, \"Crescimento exponencial\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"Pasted%20image%2020210508151804.png\",\n    \"alt\": \"Pasted image 20210508151804.png\"\n  })), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Cada dupla h\\xE9lice gera duas novas fitas e assim por diante\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Primeiro ciclo\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Acontece a desnatura\\xE7\\xE3o, anelamento e extens\\xE3o do primer\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Partindo de uma, teremos duas duplas h\\xE9lices que s\\xE3o bastante longas\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Segundo ciclo\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Primer n\\xE3o \\xE9 removido\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Acontece novo anelamento com outro primer\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Partindo das duas, agora teremos 4 mol\\xE9culas de DNA longas\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Terceiro ciclo\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Primer n\\xE3o \\xE9 removido\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Todas as 4 duplas h\\xE9lices do ciclo anterior v\\xE3o se abrir e servir de molde para uma nova dupla fita\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Vai gerar 6 duplas h\\xE9lices longas e 2 do tamanho de interesse (come\\xE7a em um primer e vai at\\xE9 o outro)\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210508152829.png\",\n    \"alt\": \"Pasted image 20210508152829.png\"\n  }), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Ao final de 35 ciclos ter\\xE1 68 bilh\\xF5es de c\\xF3pias do DNA de interesse\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210508154813.png\",\n    \"alt\": \"Pasted image 20210508154813.png\"\n  }), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Gr\\xE1fico de emiss\\xE3o. Perceba que o rosinha emitiu a partir de certo ponto\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A cada ciclo do ciclo mais vai se ligar e mais solta\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Essa pessoa \\xE9 heterozigota\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210508155025.png\",\n    \"alt\": \"Pasted image 20210508155025.png\"\n  }), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Pessoa homozigota\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"AsbTY23XIV.mp4\",\n    \"alt\": \"AsbTY23XIV.mp4\"\n  }))), mdx(\"h1\", {\n    \"id\": \"other\"\n  }, \"Other\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/PCR-exercicios\",\n    \"title\": \"PCR exercícios\"\n  }, \"[[PCR exerc\\xEDcios]]\"), \"\")), mdx(\"p\", null, \"#review \"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Eletroforese em gel\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"M\\xE9todo de visualiza\\xE7\\xE3o do DNA depois da \", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/Extracao-de-DNA\",\n    \"title\": \"Extração de DNA\"\n  }, \"[[Extra\\xE7\\xE3o de DNA]]\"), \" ou de t\\xE9cnicas que permitem confimar a presen\\xE7a de DNA em determinada solu\\xE7\\xE3o\")), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Separa as part\\xEDculas de acordo com a carga e a massa das mesmas\"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"pode ser utilizada para separa\\xE7\\xE3o de diversas mol\\xE9culas org\\xE2nicas, como lipoprote\\xEDnas, prote\\xEDnas, RNA e DNA\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"O princ\\xEDpio da eletroforese para separa\\xE7\\xE3o de DNA baseia-se: \"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"na carga negativa do DNA \", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210428165757.png\",\n    \"alt\": \"Pasted image 20210428165757.png\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\xC9 o fosfato do DNA que possu\\xED isso.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"no tamanho da mol\\xE9cula\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210428163244.png\",\n    \"alt\": \"Pasted image 20210428163244.png\"\n  }), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Mol\\xE9culas menores chegam antes\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"As maiores depois\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Todas v\\xE3o em dire\\xE7\\xE3o ao positivo\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"O comprimento do DNA se refere ao n\\xFAmero de pares de bases\")))))), mdx(\"h1\", {\n    \"id\": \"cuba-de-eletroforese\"\n  }, \"Cuba de eletroforese\"), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"Pasted%20image%2020210428163727.png\",\n    \"alt\": \"Pasted image 20210428163727.png\"\n  })), mdx(\"ol\", null, mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Se adiciona uma esp\\xE9cie de gelatina (gel de agorose) nas formas para o gel\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Nessa gelatina, adiciona-se pentes (com dentes) que, depois de solificado o gel e feita a remo\\xE7\\xE3o do pente, deixam impress\\xF5es na gelatina\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Na cuba se faz a \\\"corrida do DNA\\\" (ele se move de um polo ao outro)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Na cuba \\xE9 colocado as formas e um l\\xEDquido tamp\\xE3o (para movem a corrente)\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"As mol\\xE9cula menores v\\xE3o mais longe que as maiores\"), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Como o DNA \\xE9 transparente e o gel tamb\\xE9m, se usa corantes que tem afinidade por DNA e fluorescem quando exposto a luz UV\", mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210428165307.png\",\n    \"alt\": \"Pasted image 20210428165307.png\"\n  })))), mdx(\"li\", {\n    parentName: \"ol\"\n  }, \"Ladder \\xE9 uma solu\\xE7\\xE3o de Dna com tamanhos conhecidos (serve de par\\xE2metro para medi\\xE7\\xE3o)\", mdx(\"ol\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ol\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210428165452.png\",\n    \"alt\": \"Pasted image 20210428165452.png\"\n  }))))), mdx(\"p\", null, \"#review \"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"a7917a8e-e135-5198-a245-0ec37145a743","fields":{"slug":"/Eletroforese em gel","title":"Cuba de eletroforese"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"PCR exercícios\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"!\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/exercicios-tecnicas-biomol.pdf\",\n    \"title\": \"exercícios técnicas biomol.pdf\"\n  }, \"[[exerc\\xEDcios t\\xE9cnicas biomol.pdf]]\"), \"\\n!\", mdx(\"a\", {\n    parentName: \"p\",\n    \"href\": \"/gabarito-exercicios-tecnicas.pdf\",\n    \"title\": \"gabarito exercicios tecnicas.pdf\"\n  }, \"[[gabarito exercicios tecnicas.pdf]]\"), \"\"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"1021464b-b0bf-5aa8-9d54-eddb116c1f52","fields":{"slug":"/PCR exercícios","title":"PCR exercícios"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Extracao-de-DNA\",\n    \"title\": \"Extração de DNA\"\n  }, \"[[Extra\\xE7\\xE3o de DNA]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Eletroforese-em-gel\",\n    \"title\": \"Eletroforese em gel\"\n  }, \"[[Eletroforese em gel]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/PCR\",\n    \"title\": \"PCR\"\n  }, \"[[PCR]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/PCR-RFLP\",\n    \"title\": \"PCR-RFLP\"\n  }, \"[[PCR-RFLP]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Sequenciamento-de-DNA\",\n    \"title\": \"Sequenciamento de DNA\"\n  }, \"[[Sequenciamento de DNA]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"6b1dea38-aaa6-5f39-878b-34ba52f583f0","fields":{"slug":"/Técnicas moleculares","title":"Técnicas moleculares"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"PCR-RFLP\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"O que \\xE9 o PCR-RFLP?\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\\xC9 uma t\\xE9cnica que combina \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/PCR\",\n    \"title\": \"PCR\"\n  }, \"[[PCR]]\"), \" e enzimas de clivagem para identificar snips\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210531094554.png\",\n    \"alt\": \"Pasted image 20210531094554.png\"\n  })))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Como acontece o processo do PCR-RFLP? \", mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210531094604.png\",\n    \"alt\": \"Pasted image 20210531094604.png\"\n  }), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Nesse caso, como a enzima de restri\\xE7\\xE3o trabalha com pal\\xEDndromos (no caso GAATTC), ela s\\xF3 vai quebrar em dois a sequ\\xEAncia que possui esse pal\\xEDndrome, ajudando a identificar o snip\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210531094840.png\",\n    \"alt\": \"Pasted image 20210531094840.png\"\n  }), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Perceba que h\\xE1 pessoas homozigotas (apresentam s\\xF3 uma banda) e heterozigotas (que apresentam as 3 bandas). Ainda h\\xE1 uma pessoa homozigota para o alelo 1.\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A primeira banda \\xE9 o DNA n\\xE3o clivado\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"A segunda e terceira \\xE9 o clivado (alelo 1)\")))))))), mdx(\"p\", null, \"#review \"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"81ea24ac-781a-5a07-9ea4-17758b6a92f3","fields":{"slug":"/PCR-RFLP","title":"PCR-RFLP"}}}]},"fields":{"slug":"/PCR","title":"Componentes"}}},"pageContext":{"id":"8e0ecf46-da68-519f-9a16-4daad1d59ebe"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}