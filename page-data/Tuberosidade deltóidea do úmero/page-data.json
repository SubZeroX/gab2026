{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Tuberosidade deltóidea do úmero","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"sr-due\": \"2021-10-01T00:00:00.000Z\",\n  \"sr-interval\": 76,\n  \"sr-ease\": 294\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"hr\", null), mdx(\"p\", null, \"title: \", \"[\\\"Tuberosidade delt\\xF3idea\\\"]\", \"\\nsr-due: 2021-07-11\\nsr-interval: 14\"), mdx(\"h2\", {\n    \"id\": \"sr-ease-274\"\n  }, \"sr-ease: 274\"), mdx(\"p\", null, \"#review \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210616120006.png\",\n    \"alt\": \"Pasted image 20210616120006.png\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Eleva\\xE7\\xE3o triangular \\xE1spera para inser\\xE7\\xE3o do \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Musculo-deltoide\",\n    \"title\": \"Músculo deltóide\"\n  }, \"[[M\\xFAsculo delt\\xF3ide]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Músculo deltóide\"],\n  \"sr-due\": \"2021-07-26T00:00:00.000Z\",\n  \"sr-interval\": 28,\n  \"sr-ease\": 270\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#review \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210613130416.png\",\n    \"alt\": \"Pasted image 20210613130416.png\"\n  }))), mdx(\"h1\", {\n    \"id\": \"porções\"\n  }, \"Por\\xE7\\xF5es\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Porcao-anterior-do-musculo-deltoide\",\n    \"title\": \"Porção anterior do músculo deltóide\"\n  }, \"[[Por\\xE7\\xE3o anterior do m\\xFAsculo delt\\xF3ide]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Porcao-media-do-musculo-deltoide\",\n    \"title\": \"Porção média do músculo deltóide\"\n  }, \"[[Por\\xE7\\xE3o m\\xE9dia do m\\xFAsculo delt\\xF3ide]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[[Por\\xE7\\xE3o posterior do m\\xFAsculo delt\\xF3ide]][^3]\")), mdx(\"h1\", {\n    \"id\": \"inervação\"\n  }, \"Inerva\\xE7\\xE3o\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[[Nervo axilar]][^1]\")), mdx(\"h1\", {\n    \"id\": \"inserção\"\n  }, \"Inser\\xE7\\xE3o\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[[Tuberosidade delt\\xF3idea do \\xFAmero]][^2]\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"a8103b16-cc9f-518d-9ebe-52664fb31ee0","fields":{"slug":"/Músculo deltóide","title":"Porções"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Diáfise do úmero\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Por\\xE7\\xE3o do \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Umero\",\n    \"title\": \"Úmero\"\n  }, \"[[\\xDAmero]]\"), \" que se encontra entre a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Epifise-proximal-do-umero\",\n    \"title\": \"Epífise proximal do úmero\"\n  }, \"[[Ep\\xEDfise proximal do \\xFAmero]]\"), \" e a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Parte-distal-do-umero\",\n    \"title\": \"Parte distal do úmero\"\n  }, \"[[Parte distal do \\xFAmero]]\"), \"\")), mdx(\"h1\", {\n    \"id\": \"partes-de-interesse-anatômico\"\n  }, \"Partes de interesse anat\\xF4mico\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tuberosidade-deltoidea-do-umero\",\n    \"title\": \"Tuberosidade deltóidea do úmero\"\n  }, \"[[Tuberosidade delt\\xF3idea do \\xFAmero]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Sulco-do-nervo-radial-do-umero\",\n    \"title\": \"Sulco do nervo radial do úmero\"\n  }, \"[[Sulco do nervo radial do \\xFAmero]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"bd83a145-dde7-5b59-a955-ca9fbd7fef41","fields":{"slug":"/Diáfise do úmero","title":"Partes de interesse anatômico"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Nervo cutâneo medial do antebraço\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"Pasted%20image%2020210512163515.png\",\n    \"alt\": \"Pasted image 20210512163515.png\"\n  }), \"\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"Pasted%20image%2020210512163539.png\",\n    \"alt\": \"Pasted image 20210512163539.png\"\n  })), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Origem no \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Fasciculo-medial\",\n    \"title\": \"Fascículo medial\"\n  }, \"[[Fasc\\xEDculo medial]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Quando chega pr\\xF3ximo a \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tuberosidade-deltoidea-do-umero\",\n    \"title\": \"Tuberosidade deltóidea do úmero\"\n  }, \"[[Tuberosidade delt\\xF3idea do \\xFAmero]]\"), \", se divide em dois ramos terminais\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Nervo-cutaneo-medial-anterior-do-antebraco\",\n    \"title\": \"Nervo cutâneo medial anterior do antebraço\"\n  }, \"[[Nervo cut\\xE2neo medial anterior do antebra\\xE7o]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Nervo-cutaneo-medial-posterior-da-antebraco\",\n    \"title\": \"Nervo cutâneo medial posterior da antebraço\"\n  }, \"[[Nervo cut\\xE2neo medial posterior da antebra\\xE7o]]\"), \"\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Faz inerva\\xE7\\xE3o de toda parte medial do \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Antebraco\",\n    \"title\": \"Antebraço\"\n  }, \"[[Antebra\\xE7o]]\"), \"\\n#review \")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"26ccdb68-b9b1-5d45-9ca1-ea1fee3cd126","fields":{"slug":"/Nervo cutâneo medial do antebraço","title":"Nervo cutâneo medial do antebraço"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Músculo deltóide\"],\n  \"sr-due\": \"2021-07-26T00:00:00.000Z\",\n  \"sr-interval\": 28,\n  \"sr-ease\": 270\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#review \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210613130416.png\",\n    \"alt\": \"Pasted image 20210613130416.png\"\n  }))), mdx(\"h1\", {\n    \"id\": \"porções\"\n  }, \"Por\\xE7\\xF5es\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Porcao-anterior-do-musculo-deltoide\",\n    \"title\": \"Porção anterior do músculo deltóide\"\n  }, \"[[Por\\xE7\\xE3o anterior do m\\xFAsculo delt\\xF3ide]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Porcao-media-do-musculo-deltoide\",\n    \"title\": \"Porção média do músculo deltóide\"\n  }, \"[[Por\\xE7\\xE3o m\\xE9dia do m\\xFAsculo delt\\xF3ide]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[[Por\\xE7\\xE3o posterior do m\\xFAsculo delt\\xF3ide]][^3]\")), mdx(\"h1\", {\n    \"id\": \"inervação\"\n  }, \"Inerva\\xE7\\xE3o\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[[Nervo axilar]][^1]\")), mdx(\"h1\", {\n    \"id\": \"inserção\"\n  }, \"Inser\\xE7\\xE3o\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"[[Tuberosidade delt\\xF3idea do \\xFAmero]][^2]\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"a8103b16-cc9f-518d-9ebe-52664fb31ee0","fields":{"slug":"/Músculo deltóide","title":"Porções"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Nervo cutâneo posterior do antebraço\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"Pasted%20image%2020210512164745.png\",\n    \"alt\": \"Pasted image 20210512164745.png\"\n  }), \"\\n\", mdx(\"img\", {\n    parentName: \"p\",\n    \"src\": \"Pasted%20image%2020210512164904.png\",\n    \"alt\": \"Pasted image 20210512164904.png\"\n  })), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Origem no \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Nervo-radial\",\n    \"title\": \"Nervo radial\"\n  }, \"[[Nervo radial]]\"), \", mais ou menos na altura da \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tuberosidade-deltoidea-do-umero\",\n    \"title\": \"Tuberosidade deltóidea do úmero\"\n  }, \"[[Tuberosidade delt\\xF3idea do \\xFAmero]]\"), \"\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210512171135.png\",\n    \"alt\": \"Pasted image 20210512171135.png\"\n  })))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Faz a inerva\\xE7\\xE3o mais p\\xF3stero-lateral do \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Antebraco\",\n    \"title\": \"Antebraço\"\n  }, \"[[Antebra\\xE7o]]\"), \"\")), mdx(\"p\", null, \"#review \"));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"9e5d0fcc-81cc-572f-9c96-d653f8a4f73f","fields":{"slug":"/Nervo cutâneo posterior do antebraço","title":"Nervo cutâneo posterior do antebraço"}}}]},"fields":{"slug":"/Tuberosidade deltóidea do úmero","title":"Tuberosidade deltóidea do úmero"}}},"pageContext":{"id":"06eb63a9-c93a-5fc1-a223-3e39986d507e"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}