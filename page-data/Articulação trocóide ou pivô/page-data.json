{"componentChunkName":"component---node-modules-gatsby-theme-garden-src-templates-local-file-js","path":"/Articulação trocóide ou pivô","result":{"data":{"file":{"childMdx":{"body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Articulação trocóide ou pivô\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Articulacoes\",\n    \"title\": \"Articulações\"\n  }, \"[[Articula\\xE7\\xF5es]]\"), \" >\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Diartroses\",\n    \"title\": \"Diartroses\"\n  }, \"[[Diartroses]]\"), \" >  \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Diartroses-Monoaxial\",\n    \"title\": \"Diartroses Monoaxial\"\n  }, \"[[Diartroses Monoaxial]]\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Proporciona o movimento de rota\\xE7\\xE3o\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Articula\\xE7\\xE3o radioulnar proximal\", mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"img\", {\n    parentName: \"li\",\n    \"src\": \"Pasted%20image%2020210424165454.png\",\n    \"alt\": \"Pasted image 20210424165454.png\"\n  })), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Prona\\xE7\\xE3o e supina\\xE7\\xE3o\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Articulacao-atlanto-axial\",\n    \"title\": \"Articulação atlanto axial\"\n  }, \"[[Articula\\xE7\\xE3o atlanto axial]]\"), \"\")), mdx(\"p\", null, \"#review \"));\n}\n;\nMDXContent.isMDXComponent = true;","outboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Articulações\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Sinartroses\",\n    \"title\": \"Sinartroses\"\n  }, \"[[Sinartroses]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Anfiartrose\",\n    \"title\": \"Anfiartrose\"\n  }, \"[[Anfiartrose]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Diartroses\",\n    \"title\": \"Diartroses\"\n  }, \"[[Diartroses]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"d3655e60-460c-52e0-ae7f-8b5fff2d0dce","fields":{"slug":"/Articulações","title":"Articulações"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Diartroses\"],\n  \"sr-due\": \"2021-08-18T00:00:00.000Z\",\n  \"sr-interval\": 53,\n  \"sr-ease\": 290\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"p\", null, \"#review \"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Diartroses articulam dois ossos por meio de uma c\\xE1psula articular, parte mais externa de \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Tecido-conjuntivo\",\n    \"title\": \"Tecido conjuntivo\"\n  }, \"[[Tecido conjuntivo]]\"), \" fibroso, e, em seu interior, h\\xE1 l\\xEDquido sinovial dentro de uma delicada membrana sinovial, que lubrifica.\", mdx(\"sup\", {\n    parentName: \"li\",\n    \"id\": \"fnref-238101\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-238101\",\n    \"className\": \"footnote-ref\"\n  }, \"238101\")))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"A c\\xE1psula articular \\xE9 uma membrana conjuntiva que envolve as articula\\xE7\\xF5es sinoviais como um manguito. Apresenta-se com duas camadas: a membrana fibrosa (externa) e a membrana sinovial (interna). \"), mdx(\"ul\", {\n    parentName: \"li\"\n  }, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Membrana fibrosa: mais resistente e pode estar refor\\xE7ada, em alguns pontos, por feixes tamb\\xE9m fibrosos, que constituem os ligamentos capsulares, destinados a aumentar sua resist\\xEAncia. \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Membrana sinovial: mais interna, forma um saco fechado denominado cavidade sinovial. \\xC9 abundantemente vascularizada e inervada sendo encarregada da produ\\xE7\\xE3o de l\\xEDquido sinovial, caracterizando sua fun\\xE7\\xE3o lubrificadora.\"))), mdx(\"li\", {\n    parentName: \"ul\"\n  }, mdx(\"p\", {\n    parentName: \"li\"\n  }, \"Formadas por \", \"[[Cartilagem Hialina]][^168486]\"))), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"O l\\xEDquido sinovial serve para lubrificar a cartilagem\", mdx(\"sup\", {\n    parentName: \"li\",\n    \"id\": \"fnref-922488\"\n  }, mdx(\"a\", {\n    parentName: \"sup\",\n    \"href\": \"#fn-922488\",\n    \"className\": \"footnote-ref\"\n  }, \"922488\")))), mdx(\"h1\", {\n    \"id\": \"tipos\"\n  }, \"Tipos\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Diartroses-Monoaxial\",\n    \"title\": \"Diartroses Monoaxial\"\n  }, \"[[Diartroses Monoaxial]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Diartroses-Biaxial\",\n    \"title\": \"Diartroses Biaxial\"\n  }, \"[[Diartroses Biaxial]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Diartroses-Triaxial\",\n    \"title\": \"Diartroses Triaxial\"\n  }, \"[[Diartroses Triaxial]]\"), \"\")), mdx(\"h1\", {\n    \"id\": \"casos-clínicos\"\n  }, \"Casos cl\\xEDnicos\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Osteoartrite\",\n    \"title\": \"Osteoartrite\"\n  }, \"[[Osteoartrite]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Bursite\",\n    \"title\": \"Bursite\"\n  }, \"[[Bursite]]\"), \"\")), mdx(\"div\", {\n    \"className\": \"footnotes\"\n  }, mdx(\"hr\", {\n    parentName: \"div\"\n  }), mdx(\"ol\", {\n    parentName: \"div\"\n  }, mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-238101\"\n  }, \"O que s\\xE3o as diartroses?\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-238101\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")), mdx(\"li\", {\n    parentName: \"ol\",\n    \"id\": \"fn-922488\"\n  }, \"Para que serve o l\\xEDquido sinovial das diartroses?\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"#fnref-922488\",\n    \"className\": \"footnote-backref\"\n  }, \"\\u21A9\")))));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"3b8e6c88-bf45-51fb-941b-e521bdf69dde","fields":{"slug":"/Diartroses","title":"Tipos"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Articulação Monoaxial\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Articulacoes\",\n    \"title\": \"Articulações\"\n  }, \"[[Articula\\xE7\\xF5es]]\"), \" > \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Diartroses\",\n    \"title\": \"Diartroses\"\n  }, \"[[Diartroses]]\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"realiza movimentos apenas em torno de um eixo\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Apresenta amplo movimento e em um \\xFAnico plano de movimento\")), mdx(\"h1\", {\n    \"id\": \"tipos\"\n  }, \"Tipos\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Articulacao-em-dobradica-ou-ginglimo\",\n    \"title\": \"Articulação em dobradiça ou ginglímo\"\n  }, \"[[Articula\\xE7\\xE3o em dobradi\\xE7a ou gingl\\xEDmo]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Articulacao-trocoide-ou-pivo\",\n    \"title\": \"Articulação trocóide ou pivô\"\n  }, \"[[Articula\\xE7\\xE3o troc\\xF3ide ou piv\\xF4]]\"), \"\")), mdx(\"h1\", {\n    \"id\": \"patologias\"\n  }, \"Patologias\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Artrite-reumatoide\",\n    \"title\": \"Artrite reumatoide\"\n  }, \"[[Artrite reumatoide]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Sinovite\",\n    \"title\": \"Sinovite\"\n  }, \"[[Sinovite]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"5c9d69c0-20a1-5db4-a6ca-e747d7e8bd22","fields":{"slug":"/Diartroses Monoaxial","title":"Tipos"}}},{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Articulação atlanto axial\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Articula \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Atlas\",\n    \"title\": \"Atlas\"\n  }, \"[[Atlas]]\"), \" e \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Axis\",\n    \"title\": \"Áxis\"\n  }, \"[[\\xC1xis]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Produz a rota\\xE7\\xE3o cervical\")), mdx(\"p\", null, \"#review \"));\n}\n;\nMDXContent.isMDXComponent = true;","frontmatter":{"aliases":[]},"parent":{"__typename":"File","id":"4e107952-c1e7-53a4-aac0-f32df341d0a6","fields":{"slug":"/Articulação atlanto axial","title":"Articulação atlanto axial"}}}],"inboundReferences":[{"__typename":"Mdx","body":"function _extends() { _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; }; return _extends.apply(this, arguments); }\n\nfunction _objectWithoutProperties(source, excluded) { if (source == null) return {}; var target = _objectWithoutPropertiesLoose(source, excluded); var key, i; if (Object.getOwnPropertySymbols) { var sourceSymbolKeys = Object.getOwnPropertySymbols(source); for (i = 0; i < sourceSymbolKeys.length; i++) { key = sourceSymbolKeys[i]; if (excluded.indexOf(key) >= 0) continue; if (!Object.prototype.propertyIsEnumerable.call(source, key)) continue; target[key] = source[key]; } } return target; }\n\nfunction _objectWithoutPropertiesLoose(source, excluded) { if (source == null) return {}; var target = {}; var sourceKeys = Object.keys(source); var key, i; for (i = 0; i < sourceKeys.length; i++) { key = sourceKeys[i]; if (excluded.indexOf(key) >= 0) continue; target[key] = source[key]; } return target; }\n\n/* @jsxRuntime classic */\n\n/* @jsx mdx */\nvar _frontmatter = {\n  \"title\": [\"Articulação Monoaxial\"]\n};\nvar layoutProps = {\n  _frontmatter: _frontmatter\n};\nvar MDXLayout = \"wrapper\";\nreturn function MDXContent(_ref) {\n  var components = _ref.components,\n      props = _objectWithoutProperties(_ref, [\"components\"]);\n\n  return mdx(MDXLayout, _extends({}, layoutProps, props, {\n    components: components,\n    mdxType: \"MDXLayout\"\n  }), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Articulacoes\",\n    \"title\": \"Articulações\"\n  }, \"[[Articula\\xE7\\xF5es]]\"), \" > \", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Diartroses\",\n    \"title\": \"Diartroses\"\n  }, \"[[Diartroses]]\"), \" \"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"realiza movimentos apenas em torno de um eixo\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"Apresenta amplo movimento e em um \\xFAnico plano de movimento\")), mdx(\"h1\", {\n    \"id\": \"tipos\"\n  }, \"Tipos\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Articulacao-em-dobradica-ou-ginglimo\",\n    \"title\": \"Articulação em dobradiça ou ginglímo\"\n  }, \"[[Articula\\xE7\\xE3o em dobradi\\xE7a ou gingl\\xEDmo]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Articulacao-trocoide-ou-pivo\",\n    \"title\": \"Articulação trocóide ou pivô\"\n  }, \"[[Articula\\xE7\\xE3o troc\\xF3ide ou piv\\xF4]]\"), \"\")), mdx(\"h1\", {\n    \"id\": \"patologias\"\n  }, \"Patologias\"), mdx(\"ul\", null, mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Artrite-reumatoide\",\n    \"title\": \"Artrite reumatoide\"\n  }, \"[[Artrite reumatoide]]\"), \"\"), mdx(\"li\", {\n    parentName: \"ul\"\n  }, \"\", mdx(\"a\", {\n    parentName: \"li\",\n    \"href\": \"/Sinovite\",\n    \"title\": \"Sinovite\"\n  }, \"[[Sinovite]]\"), \"\")));\n}\n;\nMDXContent.isMDXComponent = true;","parent":{"__typename":"File","id":"5c9d69c0-20a1-5db4-a6ca-e747d7e8bd22","fields":{"slug":"/Diartroses Monoaxial","title":"Tipos"}}}]},"fields":{"slug":"/Articulação trocóide ou pivô","title":"Articulação trocóide ou pivô"}}},"pageContext":{"id":"7048605d-1108-505f-ac1c-3a978f229aeb"}},"staticQueryHashes":["2098632890","2221750479","2468095761"]}